public class MatrixMultiplicationController {
    // Matrix A
    public Integer a00 { get; set; }
    public Integer a01 { get; set; }
    public Integer a10 { get; set; }
    public Integer a11 { get; set; }

    // Matrix B
    public Integer b00 { get; set; }
    public Integer b01 { get; set; }
    public Integer b10 { get; set; }
    public Integer b11 { get; set; }

    // Result Matrix
    public Integer r00 { get; private set; }
    public Integer r01 { get; private set; }
    public Integer r10 { get; private set; }
    public Integer r11 { get; private set; }

    public Boolean showResult { get; private set; }

    public MatrixMultiplicationController() {
        showResult = false;
    }

    // Method to perform matrix multiplication
    public void multiplyMatrices() {
        r00 = a00 * b00 + a01 * b10;
        r01 = a00 * b01 + a01 * b11;
        r10 = a10 * b00 + a11 * b10;
        r11 = a10 * b01 + a11 * b11;
        showResult = true;
    }
}

// public class MatrixMultiplicationController {
//     public Integer rowsA { get; set; }
//     public Integer colsA { get; set; }
//     public Integer rowsB { get; set; }
//     public Integer colsB { get; set; }

//     public List<List<Integer>> matrixA { get; set; }
//     public List<List<Integer>> matrixB { get; set; }
//     public List<List<Integer>> resultMatrix { get; private set; }

//     public Boolean showResult { get; private set; }

//     public MatrixMultiplicationController() {
//         showResult = false;
//         matrixA = new List<List<Integer>>();
//         matrixB = new List<List<Integer>>();
//         resultMatrix = new List<List<Integer>>();
//     }

//     public void multiplyMatrices() {
//         if (colsA != rowsB) {
//             throw new AuraHandledException('Matrix multiplication not possible: colsA must equal rowsB.');
//         }

//         resultMatrix = new List<List<Integer>>();

//         for (Integer i = 0; i < rowsA; i++) {
//             List<Integer> row = new List<Integer>();
//             for (Integer j = 0; j < colsB; j++) {
//                 Integer sum = 0;
//                 for (Integer k = 0; k < colsA; k++) {
//                     sum += matrixA[i][k] * matrixB[k][j];
//                 }
//                 row.add(sum);
//             }
//             resultMatrix.add(row);
//         }
//         showResult = true;
//     }
// }

// MatrixMultiplicationController mmc = new MatrixMultiplicationController();

// mmc.rowsA = 2;
// mmc.colsA = 3;
// mmc.rowsB = 3;
// mmc.colsB = 2;

// // Initialize Matrix A (2x3)
// mmc.matrixA = new List<List<Integer>> {
//     new List<Integer>{1, 2, 3},
//     new List<Integer>{4, 5, 6}
// };

// // Initialize Matrix B (3x2)
// mmc.matrixB = new List<List<Integer>> {
//     new List<Integer>{7, 8},
//     new List<Integer>{9, 10},
//     new List<Integer>{11, 12}
// };

// mmc.multiplyMatrices();

// System.debug('Result Matrix:');
// for (List<Integer> row : mmc.resultMatrix) {
//     System.debug(row);
// }
